
terraform {
  required_providers { aws = { source = "hashicorp/aws", version = "~> 5.0" } }
}
provider "aws" { region = "{{ region }}" }
data "aws_vpc" "default" { default = true }
data "aws_subnet_ids" "default" { vpc_id = data.aws_vpc.default.id }
data "aws_ami" "al2" { most_recent = true owners=["amazon"] filter{ name="name" values=["amzn2-ami-hvm-*-x86_64-gp2"] } }
resource "aws_security_group" "web" {
  name = "autodeploy-web" vpc_id = data.aws_vpc.default.id
  ingress { from_port=80 to_port=80 protocol="tcp" cidr_blocks=["0.0.0.0/0"] }
  egress  { from_port=0 to_port=0 protocol="-1"   cidr_blocks=["0.0.0.0/0"] }
}
resource "aws_instance" "app" {
  ami = data.aws_ami.al2.id
  instance_type = "t3.micro"
  subnet_id = element(data.aws_subnet_ids.default.ids,0)
  vpc_security_group_ids=[aws_security_group.web.id]
  user_data = file("${path.module}/user_data.sh")
  tags = { Name = "autodeploy-hello-world" }
}
output "public_ip" { value = aws_instance.app.public_ip }
output "url"       { value = "http://${aws_instance.app.public_ip}" }
